# -*- coding: utf-8 -*-
#  @Time        :    2018/10/29 18:59
#  @Author      :    Json Wan
#  @Description :    
#  @File        :    test3.py
#  @Place       :    dormitory
'''
跟车距离
时间限制：C/C++语言 1000MS；其他语言 3000MS
内存限制：C/C++语言 65536KB；其他语言 589824KB
题目描述：
Pony的工程师们在编写自动驾驶代码时经常需要考虑的问题就是无人车是否会跟其他车相撞。考虑无人车跟车行驶的场景，综合系统的响应延迟、无人车的最大减速度、前车的最大减速度，跟车稳定时无人车会与前车保持一个恒定的车距。考虑在一条长直道上，有n辆无人车沿车道向前以固定速度匀速行驶并保持最小的安全跟车距离，你能否帮助Pony的工程师们编写程序计算第一辆车到最后一辆车的距离是多少？

为了使问题足够简化，我们假设第i辆无人车的长度为li，最大减速度为acci，系统响应延迟为di。其中i从0到n-1分别对应最前的车到最后的车。无人车需要保持的最小跟车距离应满足：当前车突然以其最大减速度acci-1（我们假设每辆无人车都能获得其前车最大减速度的数据）匀减速时，无人车将在di秒后以自己的最大减速度acci开始匀减速，在直到两车速度均减为0的整个过程中不能发生任何碰撞（后车前部不会接触到前车尾部）。假设所有车均以速度v匀速行驶并与前车保持最小的跟车距离，请你求出第一辆车车头到最后一辆车车尾的总长度。
输入

第一行是两个用空格隔开的整数n和浮点数v，表示共有n辆车，最终将以速度v匀速行驶。

接下来共n行，每行是用空格隔开的3个浮点数，分别为li, acci, di。

1 <= n <= 100，1 <= li <= 20，1 <= acci <= 20，0 <= di <= 1，1 <= v <= 35。输入浮点数均保留3位小数，所有物理量为国际单位制。输入数据保证最终结果不会因为浮点数精度导致四舍五入保留三位小数时出现误差。

输出
输出一行，包含一个四舍五入保留3位小数的浮点数，表示第一辆车车头到最后一辆车车尾的总长度。

样例输入
2 20.000
5.000 10.000 0.500
5.000 8.000 0.400
样例输出
23.000

'''

def main():

    pass


if __name__ == '__main__':
    main()
